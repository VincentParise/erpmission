{% extends 'base.html.twig' %}

{% block title %}Liste des Missions{% endblock %}

{% block content %}

    <a href="{{ path('home') }}" class="btn btn-primary erp-family">Retour</a>
    <hr>
    <h1 class="erp-family">Liste des Missions</h1>
    <div class="table-responsive-md erp-family mb-2">
        <form class="form-control js-filter">
            <h4>Filtrage <small><em style="color: lightgray;font-size: 11px;">cliquer sur la souris en dehors des champs pour lancer les recherches</em></small></h4>

            <div class="m-1">
                <label for="recherche-mot">Recherche par mot : <small><em style="color: lightgray;font-size: 11px;">(titre ou description)</em></small> </label>
                <input name="recherche" id="recherche-mot" type="text"><br/>
            </div>
            <div class="m-1">
                <label for="statut-select">Statut :</label>
                <select name="statut" id="statut-select">
                    <option value="" ></option>
                    {% for statutsmission in statutsmissions %}
                        <option value="{{ statutsmission }}" >{{ statutsmission }}</option>
                    {% endfor %}
                </select><br/>
            </div>
            <div class="m-1">
                <label for="pays-select">Pays :</label>
                <select name="pays" id="pays-select">
                    <option value="" ></option>
                    {% for paysmission in paysmissions %}
                        <option value="{{ paysmission }}" >{{ paysmission }}</option>
                    {% endfor %}
                </select><br/>
            </div>
            <div class="m-1">
                <label for="specialites-select">Specialité :</label>
                <select name="specialites" id="specialites-select">
                    <option value="" ></option>
                    {% for specialitesmission in specialitesmissions %}
                        <option value="{{ specialitesmission }}" >{{ specialitesmission }}</option>
                    {% endfor %}
                </select>
            </div>
        </form>
    </div>
    <div class="table-responsive-md erp-family">
        <table class="table table-striped table-bordered">
            <thead>
                <tr>
                    <th>Nom de Code</th>
                    <th>Titre</th>
                    <th>Description</th>
                    <th>Date Début</th>
                    <th>Date Fin</th>
                    <th>Pays</th>
                    <th>Spécialité</th>
                    <th>Cibles</th>
                    <th>Planques</th>
                    <th>Agents</th>
                    <th>Contacts</th>
                    <th>Statut</th>
                    <th>Actions</th>

                </tr>
            </thead>
            <tbody id="content">
                {% include 'missions/content_index.html.twig' %}
            </tbody>
        </table>

        {# Gestion de la pagination
        <ul class="pagination">
            {% for item in 1..((total/limit)|round(0,'ceil')) %}
                <li>

                </li>
            {% endfor %}
        </ul>
        #}
        {#  {{ knp_pagination_render(missions) }}#}
    </div>

    <a href="{{ path('missions_new') }}" class="btn btn-info erp-family">Nouvelle Mission</a>
{% endblock %}

{% block javascripts %}

    <script>
        const select=document.querySelector('.js-filter')
        select.addEventListener('change',onChangeValueList)

        function onChangeValueList(event){
            // On intercepte le changement
            // On Récupère les données du formulaire.
            const Form = new FormData(select)

            // On fabrique la querystring : après le poitn d'interrogation
            const Params=new URLSearchParams()

            // On boucle sur chaque clé du formulaire key avec ces valeurs : ici pays et Specialites
            Form.forEach((value,key)=>{
                Params.append(key,value)
            })
            console.log(Params)
            // On crée l'url active
            const Url = new URL(window.location.href)

            // On lance la requête Ajax avec fetch
            fetch(Url.pathname + '?' + Params.toString() + '&ajax=1',{
                headers:{
                    "X-Requested-With":"XMLHttpRequest"
                }
            }).then(response =>
                response.json()
            ).then(data =>{
                const content = document.querySelector('#content')
                content.innerHTML=data.content
                //console.log(data.content)

                //On met à jour l'URL
                history.pushState({},null,Url.pathname+'?'+Params.toString())

            }).catch(e=> alert(e))
        }
    </script>

{% endblock %}